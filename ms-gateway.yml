server:
  port: '8080'


management:
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      enabled: true
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: 'true'
    tags:
      application: ${spring.application.name}
    export:
      prometheus:
        enabled: true
  endpoints:
    web:
      exposure:
        include: health, metrics, prometheus
      path-mapping:
        prometheus: metrics,info,health,prometheus


# management:
#   health:
#     circuitbreakers:
#       enabled: true
#   security: 
#     enabled: false
#   endpoints:
#     web:
#       exposure:
#         include: '*'
#       path-mapping:
#         prometheus: metrics
#   endpoint:
#     prometheus:
#       enabled: true
#   metrics:
#     export:
#       prometheus:
#         enabled: true

  #     show-details: always
  
spring:
  cloud:
    consul:
      discovery:
        instanceId: ms-gateway
        health-check-interval: 5s
    gateway:
      discovery:
        locator:
          enabled: true
      routes:
      - id: ms-service-a
        uri: lb://ms-service-a
        predicates:
        - Path=/srva/**
        filters:
        - RewritePath=/srva/(?<segment>.*), /$\{segment}
        - name: CircuitBreaker
          args:
            name: monitor-srvA
            fallbackUri: forward:/fallback/serviceA
      - id: ms-service-b
        uri: lb://ms-service-b
        predicates:
        - Path=/srvb/**
        filters:
        - RewritePath=/srvb/(?<segment>.*), /$\{segment}
        - name: CircuitBreaker
          args:
            name: monitor-srvB
            fallbackUri: forward:/fallback/serviceB